{"version":3,"sources":["Cell.js","Board.js","utils.js","Game.js","index.js"],"names":["Cell","props","value","onClick","react_default","a","createElement","className","data-value","Board","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","winner","stepCounter","restartGame","_this$props","cells","map","cell","index","src_Cell","key","_this$props2","renderCells","renderResetButton","React","Component","getWinner","_winLines$filter","filter","comb","_comb","slicedToArray","b","c","winCombo","Game","_this","hendlerCells","_this$state","state","whoNext","toConsumableArray","setState","Array","fill","gameStatus","_this$state2","concat","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.9f73cbea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Cell (props) {\r\n    const {value, onClick} = props;\r\n    return (\r\n        <div className=\"board-cell\" \r\n          data-value={value}\r\n          onClick = {onClick}>\r\n            {value}\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Cell;","import React from \"react\";\nimport Cell from \"./Cell\";\nclass Board extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  renderResetButton(winner, stepCounter) {\n    if (winner || stepCounter === 10) {\n      return (\n        <button className=\"resetGame\" onClick={this.props.restartGame}>\n          Restart Game\n        </button>\n      );\n    }\n  }\n  renderCells() {\n    const { cells, onClick } = this.props;\n    return cells.map((cell, index) => {\n      return (\n        <Cell\n          value={cell}\n          key={\"Cell -\" + index}\n          onClick={() => {\n            onClick(index);\n          }}\n        />\n      );\n    });\n  }\n\n  render() {\n    const {winner,stepCounter} = this.props;\n    return (\n      <div className=\"board\">\n        {this.renderCells()} {this.renderResetButton(winner, stepCounter)}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","function getWinner(cells) {\n    const winLines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ]\n\n    let [winCombo] = winLines.filter(comb => {\n        let [a,b,c] = comb;\n        return cells[a] && cells[a] === cells[b] && cells[b] === cells[c];\n    })\n    if(winCombo) {\n        return cells[winCombo[0]]\n    }\n    // return ;\n}   \n\nexport default getWinner;","import React from \"react\";\nimport \"./App.css\";\nimport Board from \"./Board\";\nimport getWinner from \"./utils\";\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cells: Array(9).fill(null),\n      stepCounter: 1,\n      whoNext: \"X\",\n      winner: null\n    };\n  }\n\n  hendlerCells = index => {\n    let { cells, whoNext, stepCounter, winner } = this.state;\n    cells = [...cells];\n    if (cells[index] || winner) {\n      return;\n    }\n    cells[index] = whoNext;\n    whoNext = whoNext === \"X\" ? \"0\" : \"X\";\n    stepCounter = stepCounter + 1;\n    winner = getWinner(cells);\n    this.setState({\n      cells,\n      whoNext,\n      stepCounter,\n      winner\n    });\n  };\n\n  restartGame = () => {\n    this.setState({\n      cells: Array(9).fill(null),\n      stepCounter: 1,\n      whoNext: \"X\",\n      winner: null\n    });\n  };\n\n  wichPlayerIs(whoNext) {\n    return whoNext === \"X\" ? \"X\" : \"0\";\n  }\n\n  render() {\n    const { cells, winner, whoNext, stepCounter } = this.state;\n    let gameStatus;\n    if (winner) {\n      gameStatus = `Player ${winner} wins!`;\n    } else if (stepCounter === 10) {\n      gameStatus = \"It is A DRAW!\";\n    } else {\n      gameStatus = `Player ${whoNext} your turn!`;\n    }\n    return (\n      <div className=\"wraper\">\n        <div className=\"Game\">\n          <h1>TIC TAC TOE</h1>\n          <h3>{gameStatus}</h3>\n          <Board\n            restartGame={this.restartGame}\n            cells={cells}\n            onClick={this.hendlerCells}\n            winner={winner}\n            stepCounter={stepCounter}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}